{"version":3,"sources":["js/getQuotes.js","js/setCalendar.js","js/main.js"],"names":["getQuote","fetch","then","response","json","data","quote","slip","advice","setQuote","quotesEl","document","querySelector","textContent","InitCalandar","renderCalendar","thisMonth","setCalender","thisMon","innerHTML","prevDay","i","prevDate","nextDate","nextDay","month","currentYear","currentMonth","today","getMonth","getFullYear","todayDate","getDate","currentMonthDate","querySelectorAll","classList","add","startDay","Date","getDay","endDay","curYear","curMonth","prevBtn","loadingEl","isRunning","addEventListener","moveMonth","nextBtn","window","onload"],"mappings":"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","file":"main.fb6bbcaf.js","sourceRoot":"..","sourcesContent":["async function getQuote() {\r\n  await fetch(\"https://api.adviceslip.com/advice\")\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      let quote = data.slip.advice;\r\n      setQuote(quote);\r\n    });\r\n}\r\n\r\nfunction setQuote(quote) {\r\n  const quotesEl = document.querySelector(\".quotes\");\r\n  quotesEl.textContent = quote;\r\n}\r\n\r\nexport default getQuote;\r\n","export default async function InitCalandar() {\r\n  const today = new Date();\r\n  let curYear = today.getFullYear();\r\n  let curMonth = today.getMonth();\r\n  let moveMonth;\r\n  await renderCalendar(today);\r\n\r\n  async function renderCalendar(thisMonth) {\r\n    const currentYear = thisMonth.getFullYear();\r\n    const currentMonth = thisMonth.getMonth();\r\n\r\n    // 이전 달의 마지막 날 날짜와 요일 구하기\r\n    // 날짜를 0으로 지정하면 저번 달의 마지막 날짜를 가진 date 객체가 반환됨\r\n    const startDay = new Date(currentYear, currentMonth, 0);\r\n    const prevDate = startDay.getDate();\r\n    const prevDay = startDay.getDay();\r\n\r\n    // 이번 달의 마지막 날 날짜와 요일 구하기\r\n    const endDay = new Date(currentYear, currentMonth + 1, 0);\r\n    const nextDate = endDay.getDate();\r\n    const nextDay = endDay.getDay();\r\n\r\n    setCalender();\r\n\r\n    function setCalender() {\r\n      // 달력 렌더링\r\n      const thisMon = document.querySelector(\".days\");\r\n      thisMon.innerHTML = \"\";\r\n\r\n      // 지난 달 렌더링\r\n      // 이번 달 시작 요일이 일요일이면 지날 달 출력 X\r\n      if (prevDay != 6) {\r\n        for (let i = prevDate - prevDay; i <= prevDate; i++) {\r\n          thisMon.innerHTML =\r\n            thisMon.innerHTML + `<div class=\"day disable\">${i}</div>`;\r\n        }\r\n      }\r\n      // 이번 달 렌더링\r\n      for (let i = 1; i <= nextDate; i++) {\r\n        thisMon.innerHTML = thisMon.innerHTML + `<div class=\"day\">${i}</div>`;\r\n      }\r\n\r\n      // 다음 달 렌더링\r\n      if (nextDay !== 6) {\r\n        for (let i = 1; i < 7 - nextDay; i++) {\r\n          thisMon.innerHTML =\r\n            thisMon.innerHTML + `<div class=\"day disable\">${i}</div>`;\r\n        }\r\n      }\r\n\r\n      // 현재 월 표기\r\n      const month = document.querySelector(\".month\");\r\n      month.textContent = `${currentYear}.${currentMonth + 1}`;\r\n\r\n      // 오늘 날짜 표기\r\n      if (\r\n        today.getMonth() === currentMonth &&\r\n        today.getFullYear() === currentYear\r\n      ) {\r\n        const todayDate = today.getDate();\r\n        const currentMonthDate = document.querySelectorAll(\".day\");\r\n        currentMonthDate[todayDate - 1].classList.add(\"today\");\r\n      }\r\n    }\r\n  }\r\n  // prev 버튼 누르면 지난 달로 이동\r\n  const prevBtn = document.querySelector(\".select-month .prev\");\r\n  const loadingEl = document.querySelector(\".loading\");\r\n  let isRunning = false;\r\n\r\n  prevBtn.addEventListener(\"click\", async function () {\r\n    if (isRunning) return;\r\n    isRunning = true;\r\n    curMonth = curMonth - 1;\r\n    moveMonth = new Date(curYear, curMonth, 1);\r\n    await renderCalendar(moveMonth);\r\n    isRunning = false;\r\n  });\r\n  // next 버튼 누르면 다음 달로 이동\r\n  const nextBtn = document.querySelector(\".select-month .next\");\r\n  nextBtn.addEventListener(\"click\", async function () {\r\n    if (isRunning) return;\r\n    isRunning = true;\r\n    curMonth = curMonth + 1;\r\n    moveMonth = new Date(curYear, curMonth, 1);\r\n    await renderCalendar(moveMonth);\r\n    isRunning = false;\r\n  });\r\n}\r\n","import getQuote from \"./getQuotes\";\r\nimport InitCalandar from \"./setCalendar\";\r\n\r\nwindow.onload = async function () {\r\n  await InitCalandar();\r\n  await getQuote();\r\n};\r\n"]}