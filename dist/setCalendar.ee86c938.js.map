{"version":3,"sources":["js/setCalendar.js"],"names":["InitCalandar","renderCalendar","thisMonth","setCalender","thisMon","document","querySelector","innerHTML","prevDay","i","prevDate","nextDate","nextDay","month","textContent","currentYear","currentMonth","today","getMonth","getFullYear","todayDate","getDate","currentMonthDate","querySelectorAll","classList","add","startDay","Date","getDay","endDay","curYear","curMonth","prevBtn","loadingEl","isRunning","addEventListener","moveMonth","nextBtn"],"mappings":"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","file":"setCalendar.ee86c938.js","sourceRoot":"..","sourcesContent":["export default async function InitCalandar() {\r\n  const today = new Date();\r\n  let curYear = today.getFullYear();\r\n  let curMonth = today.getMonth();\r\n  let moveMonth;\r\n  await renderCalendar(today);\r\n\r\n  async function renderCalendar(thisMonth) {\r\n    const currentYear = thisMonth.getFullYear();\r\n    const currentMonth = thisMonth.getMonth();\r\n\r\n    // 이전 달의 마지막 날 날짜와 요일 구하기\r\n    // 날짜를 0으로 지정하면 저번 달의 마지막 날짜를 가진 date 객체가 반환됨\r\n    const startDay = new Date(currentYear, currentMonth, 0);\r\n    const prevDate = startDay.getDate();\r\n    const prevDay = startDay.getDay();\r\n\r\n    // 이번 달의 마지막 날 날짜와 요일 구하기\r\n    const endDay = new Date(currentYear, currentMonth + 1, 0);\r\n    const nextDate = endDay.getDate();\r\n    const nextDay = endDay.getDay();\r\n\r\n    setCalender();\r\n\r\n    function setCalender() {\r\n      // 달력 렌더링\r\n      const thisMon = document.querySelector(\".days\");\r\n      thisMon.innerHTML = \"\";\r\n\r\n      // 지난 달 렌더링\r\n      // 이번 달 시작 요일이 일요일이면 지날 달 출력 X\r\n      if (prevDay != 6) {\r\n        for (let i = prevDate - prevDay; i <= prevDate; i++) {\r\n          thisMon.innerHTML =\r\n            thisMon.innerHTML + `<div class=\"day disable\">${i}</div>`;\r\n        }\r\n      }\r\n      // 이번 달 렌더링\r\n      for (let i = 1; i <= nextDate; i++) {\r\n        thisMon.innerHTML = thisMon.innerHTML + `<div class=\"day\">${i}</div>`;\r\n      }\r\n\r\n      // 다음 달 렌더링\r\n      if (nextDay !== 6) {\r\n        for (let i = 1; i < 7 - nextDay; i++) {\r\n          thisMon.innerHTML =\r\n            thisMon.innerHTML + `<div class=\"day disable\">${i}</div>`;\r\n        }\r\n      }\r\n\r\n      // 현재 월 표기\r\n      const month = document.querySelector(\".month\");\r\n      month.textContent = `${currentYear}.${currentMonth + 1}`;\r\n\r\n      // 오늘 날짜 표기\r\n      if (\r\n        today.getMonth() === currentMonth &&\r\n        today.getFullYear() === currentYear\r\n      ) {\r\n        const todayDate = today.getDate();\r\n        const currentMonthDate = document.querySelectorAll(\".day\");\r\n        currentMonthDate[todayDate - 1].classList.add(\"today\");\r\n      }\r\n    }\r\n  }\r\n  // prev 버튼 누르면 지난 달로 이동\r\n  const prevBtn = document.querySelector(\".select-month .prev\");\r\n  const loadingEl = document.querySelector(\".loading\");\r\n  let isRunning = false;\r\n\r\n  prevBtn.addEventListener(\"click\", async function () {\r\n    if (isRunning) return;\r\n    isRunning = true;\r\n    curMonth = curMonth - 1;\r\n    moveMonth = new Date(curYear, curMonth, 1);\r\n    await renderCalendar(moveMonth);\r\n    isRunning = false;\r\n  });\r\n  // next 버튼 누르면 다음 달로 이동\r\n  const nextBtn = document.querySelector(\".select-month .next\");\r\n  nextBtn.addEventListener(\"click\", async function () {\r\n    if (isRunning) return;\r\n    isRunning = true;\r\n    curMonth = curMonth + 1;\r\n    moveMonth = new Date(curYear, curMonth, 1);\r\n    await renderCalendar(moveMonth);\r\n    isRunning = false;\r\n  });\r\n}\r\n"]}