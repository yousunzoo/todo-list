{"version":3,"sources":["js/setCalendar.js"],"names":["InitCalandar","renderCalendar","thisMonth","setCalender","thisMon","document","querySelector","innerHTML","prevDay","i","prevDate","nextDate","nextDay","month","textContent","currentYear","currentMonth","today","getMonth","todayDate","getDate","currentMonthDate","querySelectorAll","classList","add","getFullYear","startDay","Date","getDay","endDay","prevBtn","addEventListener","nextBtn"],"mappings":"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","file":"setCalendar.ee86c938.js","sourceRoot":"..","sourcesContent":["export default async function InitCalandar() {\r\n  const today = new Date();\r\n  await renderCalendar(today);\r\n\r\n  async function renderCalendar(thisMonth) {\r\n    const currentYear = thisMonth.getFullYear();\r\n    const currentMonth = thisMonth.getMonth();\r\n\r\n    // 이전 달의 마지막 날 날짜와 요일 구하기\r\n    // 날짜를 0으로 지정하면 저번 달의 마지막 날짜를 가진 date 객체가 반환됨\r\n    const startDay = new Date(currentYear, currentMonth, 0);\r\n    const prevDate = startDay.getDate();\r\n    const prevDay = startDay.getDay();\r\n\r\n    // 이번 달의 마지막 날 날짜와 요일 구하기\r\n    const endDay = new Date(currentYear, currentMonth + 1, 0);\r\n    const nextDate = endDay.getDate();\r\n    const nextDay = endDay.getDay();\r\n\r\n    await setCalender();\r\n    function setCalender() {\r\n      // 달력 렌더링\r\n      const thisMon = document.querySelector(\".days\");\r\n      thisMon.innerHTML = \"\";\r\n\r\n      // 지난 달 렌더링\r\n      // 이번 달 시작 요일이 일요일이면 지날 달 출력 X\r\n      if (prevDay != 6) {\r\n        for (let i = prevDate - prevDay; i <= prevDate; i++) {\r\n          thisMon.innerHTML =\r\n            thisMon.innerHTML + `<div class=\"day disable\">${i}</div>`;\r\n        }\r\n      }\r\n      // 이번 달 렌더링\r\n      for (let i = 1; i <= nextDate; i++) {\r\n        thisMon.innerHTML = thisMon.innerHTML + `<div class=\"day\">${i}</div>`;\r\n      }\r\n\r\n      // 다음 달 렌더링\r\n      if (nextDay !== 6) {\r\n        for (let i = 1; i < 7 - nextDay; i++) {\r\n          thisMon.innerHTML =\r\n            thisMon.innerHTML + `<div class=\"day disable\">${i}</div>`;\r\n        }\r\n      }\r\n\r\n      // 현재 월 표기\r\n      const month = document.querySelector(\".month\");\r\n      month.textContent = `${currentYear}.${currentMonth + 1}`;\r\n\r\n      // 오늘 날짜 표기\r\n      if (today.getMonth() === currentMonth) {\r\n        const todayDate = today.getDate();\r\n        const currentMonthDate = document.querySelectorAll(\".day\");\r\n        currentMonthDate[todayDate - 1].classList.add(\"today\");\r\n      }\r\n    }\r\n\r\n    // prev 버튼 누르면 지난 달로 이동\r\n    const prevBtn = document.querySelector(\".select-month .prev\");\r\n    prevBtn.addEventListener(\"click\", async function () {\r\n      thisMonth = new Date(currentYear, currentMonth - 1, 1);\r\n      await renderCalendar(thisMonth);\r\n    });\r\n    // next 버튼 누르면 다음 달로 이동\r\n    const nextBtn = document.querySelector(\".select-month .next\");\r\n    nextBtn.addEventListener(\"click\", async function () {\r\n      thisMonth = new Date(currentYear, currentMonth + 1, 1);\r\n      await renderCalendar(thisMonth);\r\n    });\r\n  }\r\n}\r\n"]}